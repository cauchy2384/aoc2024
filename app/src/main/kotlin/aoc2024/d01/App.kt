/*
 * This source file was generated by the Gradle 'init' task
 */
package aoc2024.d01 

import java.io.InputStream

import kotlin.math.abs

class App {
    fun solve(input: InputStream): Int {
        var (left, right) = input.bufferedReader().use { 
            reader -> reader.lineSequence()
                .map { line -> line.split(" ").filter(String::isNotEmpty) }
                .map { nums -> nums.first().toInt() to nums.last().toInt() }
                .unzip()
                .let{ (l, r) -> l.sorted() to r.sorted() }
        }
        return left.zip(right) { l, r -> abs(l - r)}
            .sum()
    }

    fun solve2(input: InputStream): Int {
        var (nums, count) = input.bufferedReader().use { 
            reader -> reader.lineSequence()
                .map { line -> line.split(" ").filter(String::isNotEmpty) }
                .map { nums -> nums.first().toInt() to nums.last().toInt() }
                .unzip()
                .let{ (l, r) -> l to r.groupingBy { it }.eachCount() }
        }
        return nums.fold(0) { ans, num -> ans + num * count.getOrDefault(num, 0) }
    }
}
    

fun main() {
}
